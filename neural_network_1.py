# -*- coding: utf-8 -*-
"""Neural_Network_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MJXrhXjtUi5LFKaiAy3AaZ2LRSBMJsl0
"""

import numpy as np
import tensorflow as tf
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

X=np.array([[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]])
y=np.array([0,0,1,1,0,1])
X_train , X_test,y_train,y_test =train_test_split(X,y,test_size=0.2,random_state=42)

model=tf.keras.Sequential([tf.keras.layers.Dense(32,activation='relu',input_shape=(2,)),
                           tf.keras.layers.Dense(16,activation='relu'),
                           tf.keras.layers.Dense(1,activation='sigmoid')])

model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['accuracy'])

model.fit(X_train,y_train,epochs=100,batch_size=1,verbose=1)

accuracy,loss=model.evaluate(X_test,y_test,verbose=0)
print("loss:",loss)
print("accuracy : ",accuracy)
y_pred=model.predict(X_test)
y_pred_class=np.round(y_pred)
print("Predictions : ",y_pred_class.flatten())